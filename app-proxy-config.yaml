apiVersion: zen.cpd.ibm.com/v1
kind: ZenExtension
metadata:
  name: {{ .serviceName }}
spec:
  extensions: |
    [
      {
        "extension_name": "{{ .serviceName }}",
        "extension_type": "nginx",
        "details": {
          "upstream_conf": "upstream.conf",
          "location_conf": "nginx.conf"
        }
      }
    ]
  upstream.conf: |
    upstream {{ .upstreamName }} {
      keepalive 32;
      keepalive_timeout 30s;
      keepalive_requests 500;
      server {{ .serviceName }}.{{ .dpPhyLocWorkloadNs }}.svc:{{ .servicePort }};
    }
  nginx.conf: |
    location = /{{ .serviceName }}/openapi.json  {
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Connection "";
      proxy_ssl_server_name on;
      proxy_buffering off;
      proxy_pass http://{{ .upstreamName }}/openapi.json;
      proxy_pass_header X-Accel-Buffering;
      sub_filter_once off;
      sub_filter_types application/json;
      sub_filter '"paths":{"/' '"paths":{"/physical_location/{{ .zenPhysicalLocationName }}/{{ .serviceName }}/';
    }
    location ~* /{{ .serviceName }}/(.*)  {
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Connection "";
      proxy_ssl_server_name on;
      proxy_buffering off;
      proxy_pass http://{{ .upstreamName }}/$1$is_args$args;
      proxy_pass_header X-Accel-Buffering;
      sub_filter '/openapi.json' '/physical_location/{{ .zenPhysicalLocationName }}/{{ .serviceName }}/openapi.json';
      sub_filter '/docs/' '/physical_location/{{ .zenPhysicalLocationName }}/{{ .serviceName }}/docs/';
      sub_filter_once off;
    }
